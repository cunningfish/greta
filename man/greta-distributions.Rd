% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distributions.R
\name{greta-distributions}
\alias{bernoulli}
\alias{beta}
\alias{binomial}
\alias{exponential}
\alias{flat}
\alias{free}
\alias{gamma}
\alias{greta-distributions}
\alias{lognormal}
\alias{negative_binomial}
\alias{normal}
\alias{poisson}
\alias{student}
\title{greta probability distributions}
\usage{
normal(mean, sd, dim = 1)

lognormal(meanlog, sdlog, dim = 1)

bernoulli(prob, dim = 1)

binomial(size, prob, dim = 1)

negative_binomial(size, prob, dim = 1)

poisson(lambda, dim = 1)

gamma(shape, rate, dim = 1)

exponential(rate, dim = 1)

student(df, ncp, dim = 1)

beta(shape1, shape2, dim = 1)

free(dim = 1)

flat(range, dim)
}
\arguments{
\item{mean, meanlog, ncp}{unconstrained parameters}

\item{sd, sdlog, size, lambda, shape, scale, rate, df, shape1, shape2}{positive parameters}

\item{dim}{the dimensions of the variable, by default a scalar}

\item{prob}{probability parameter (\code{0 < prob < 1})}

\item{range}{a finite, length 2 numeric vector giving the range of values to
which \code{flat} distributions are constrained. The first element must
be lower than the second.}
}
\description{
These probability distributions can be used to define random
  variables in a greta model. They return a 'node' object that can be
  combined with other nodes to construct a model.
}
\details{
Most of these distributions have non-uniform probability densities,
  however the distributions \code{flat} and \code{free} do not. These can
  therefore be used as parameters in likelihood (rather than Bayesian)
  inference.

  The discrete probability distributions (\code{bernoulli}, \code{binomial},
  \code{negative_binomial}, \code{poisson}) can be used as likelihoods, but
  not as unknown variables.

  Wherever possible, the parameterisation of these distributions matches the
  those in the \code{stats} package. E.g. for the parameterisation of
  \code{negative_binomial()}, see \code{\link{dnbinom}}.
}
\examples{
# a fixed distribution, e.g. for a prior
mu = normal(0, 1)

# an unconstrained, positive parameter sigma
log_sigma = free()
sigma = exp(log_sigma)

# a hierarchical distribution
theta = normal(mu, lognormal(0, 1))

# a vector of 3 variables drawn from the same hierarchical distribution
thetas = normal(mu, sigma, dim = 3)

# a matrix of 12 variables drawn from the same hierarchical distribution
thetas = normal(mu, sigma, dim = c(3, 4))

# a constrained parameter with no density (e.g. for a constrained likelihood model)
theta = flat(c(1, 5))
}

